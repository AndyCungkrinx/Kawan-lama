[icube]

; Unix user/group of processes
user = icube
group = icube

; The address on which to accept FastCGI requests.
;listen = /var/run/php-fpm/php-fpm.sock;
listen = 127.0.0.1:9000

; Set listen(2) backlog.
;listen.backlog = 511

; Set permissions for unix socket, if one is used.
listen.owner = icube
listen.group = icube
listen.mode = 0664

; List of addresses (IPv4/IPv6) of FastCGI clients which are allowed to connect.
listen.allowed_clients = 127.0.0.1

; Specify the nice(2) priority to apply to the pool processes (only if set)
; process.priority = -19

; Choose how the process manager will control the number of child processes.
pm = ondemand

; The number of child processes to be created when pm is set to 'static' and the
; maximum number of child processes when pm is set to 'dynamic' or 'ondemand'.
pm.max_children = 35

; The number of child processes created on startup.
pm.start_servers = 10

; The desired minimum number of idle server processes.
pm.min_spare_servers = 10

; The desired maximum number of idle server processes.
pm.max_spare_servers = 15

; The number of seconds after which an idle process will be killed.
pm.process_idle_timeout = 10s;

; The number of requests each child process should execute before respawning.
pm.max_requests = 500

; The URI to view the FPM status page
pm.status_path = /fpm_status

; The ping URI to call the monitoring page of FPM.
ping.path = /ping

; This directive may be used to customize the response of a ping request.
ping.response = pong

; The access log file
access.log = /var/log/$pool.access.log

; The access log format.
;access.format = "%R - %u %t \"%m %r%Q%q\" %s %f %{mili}d %{kilo}M %C%%"

; The log file for slow requests
slowlog = /var/log/$pool.log.slow

; The timeout for serving a single request after which a PHP backtrace will be
; dumped to the 'slowlog' file. A value of '0s' means 'off'.
request_slowlog_timeout = 300s

; The timeout for serving a single request after which the worker process will
; be killed.
;request_terminate_timeout = 0

; Set open file descriptor rlimit.
;rlimit_files = 1024

; Set max core size rlimit.
;rlimit_core = 0

; Chroot to this directory at the start.
;chroot =

; Chdir to this directory at the start.
;chdir = /var/www

; Redirect worker stdout and stderr into main error log.
;catch_workers_output = yes

; Clear environment in FPM workers
;clear_env = no

; Limits the extensions of the main script FPM will allow to parse.
;security.limit_extensions = .php .php3 .php4 .php5 .php7
